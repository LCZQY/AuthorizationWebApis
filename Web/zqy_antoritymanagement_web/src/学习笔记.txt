
//redux ： 统一管理数据 ??
//react-redux : ？？ 让页面更加清晰化



//子组件
export class Son extends Component {
    constructor(){
        super();
        this.state = {
            list:[
                '数据一','数据一','数据一','数据一'
            ]
        }
    }

    //删除方法
    del = (key) =>{
        let {list} = this.state;
        let newList = list.splice(key,1);
        this.setState({
            list:newList
        })
    }
    add =() =>{
        let {list} = this.state;
        //获取输入框的值
        let newValue =  this.refs.inp.value;
        console.log(newValue,"newValue");        
        this.setState({
            list: [...list,newValue] //表示在最后一个元素，添加一个元素
        })
    }
    render() {
        let {num, changeNum} = this.props; //获取父级传递的参数
        return (
            <div className="son">
                这个是一个子组件!<br/>
                <Button onClick={changeNum}>{"当前数值:"+ num}</Button>
                <ul>
                    <li>数据的遍历</li>
                    {
                        this.state.list.map((value, key) => {
                            return (
                                <li key={key}>{value}
                                    <Button onClick={() => { this.del(key) }}>删除数据</Button>
                                </li>                                
                            )
                        })
                    }
                </ul>  <br/>
                <input ref={'inp'} /><Button onClick ={() => { this.add() }}>添加</Button>                                  
            </div>
        );                
    }    
}

 <Son 
    num={this.state.num}
    changeNum = { this.changeNum}
/>
>>页面生命周期： https://www.jianshu.com/p/c9bc994933d5
>> 打包：npm run build
>>


====*************************************************************************************************************
import React, {Component} from 'react';
export default class Parent extends Component {
    render() {
        return(
            <div>
                <Child onRef={this.onRef} />
                <button onClick={this.click} >click</button>
            </div>
        )
    }
    onRef = (ref) => {
        this.child = ref
    }
    click = (e) => {
        this.child.myName()
    }
}

class Child extends Component {
    componentDidMount(){
        this.props.onRef(this)
    }
    myName = () => alert('xiaohesong')
    render() {
        return ('woqu')
    }
}
====*************************************************************************************************************

1.Bug：
    角色列表中的字数过长其操作按钮就漂了?
    组织列表点击2点整个页面就漂了 ?
    工具权限对应的组织权限取消和选中在取消在选中这里的数据有问题？？？？？？
    


2.需要深入学习的有：
    Select 的动态加载和动态取消选择
    Muen 的动态加载


3.经验总结：
    树形结构的复选框问题，清空选中框必须要先给 checkedKeys 赋值选好的Key ,在清空的时候 直接清空
